{
	"info": {
		"_postman_id": "ce2c0618-2729-4168-9f43-cafaac4f5429",
		"name": "Trello API",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12959415"
	},
	"item": [
		{
			"name": "Get all boards",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () => {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"console.log(pm.response.json().length)",
							"const response = pm.response.json();",
							"pm.collectionVariables.set('boardId', response[0].id);",
							"console.log(response.map(board => board.id))",
							"const existingBoardIds = response.map(board => board.id);",
							"pm.collectionVariables.set('existingBoardIds', existingBoardIds);",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/members/me/boards?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"members",
						"me",
						"boards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', () =>{",
							"    pm.response.to.have.status(200)",
							"});",
							"const response = pm.response.json();",
							"pm.test('Board was created', ()=>{",
							"    pm.expect(response).to.be.an('object');",
							"    pm.expect(response.closed).to.be.false;",
							"    pm.expect(response.name).to.eql('Learning Postman ' + pm.variables.get('boardNumber'))",
							"    pm.expect(response).to.haveOwnProperty('id')",
							"    pm.expect(response.id).to.be.a('string')",
							"    pm.collectionVariables.set('boardId', response.id)",
							"});",
							"",
							"pm.test('Board is private', () =>{",
							" pm.expect(response.prefs.permissionLevel).to.eql('private');",
							"});",
							"",
							"pm.test('Calendar is disabled', () =>{",
							"  const calendarView = response.prefs.switcherViews.find(view => view.viewType === 'Calendar');  ",
							"  pm.expect(calendarView.enabled).to.be.false;",
							"  pm.expect(response.prefs.switcherViews[2].enabled).to.be.false;",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"let boardNumber = pm.collectionVariables.get('boardNumber');",
							"if(isNaN(boardNumber)){",
							"    boardNumber = 0;",
							"}",
							"boardNumber++;",
							"pm.collectionVariables.set('boardNumber', boardNumber);",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/?name=Learning Postman {{boardNumber}}&key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						""
					],
					"query": [
						{
							"key": "name",
							"value": "Learning Postman {{boardNumber}}"
						},
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get a single board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 200', ()=> {",
							"    pm.response.to.have.status(200)",
							"",
							"});",
							"",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create todo list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200',() => {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test('TODO list is created', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.be.an('object');",
							"    pm.expect(response).to.haveOwnProperty('id')",
							"    pm.expect(response.name).to.eql('TODO')",
							"    pm.expect(response.closed).to.be.false;",
							"    pm.expect(response.idBoard).to.eq(pm.collectionVariables.get('boardId'));",
							"    pm.expect(response.id).to.be.a('string')",
							"    pm.collectionVariables.set('todoListId', response.id)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"TODO\",\n    \"id\": \"{{boardId}}\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/lists?key={{trelloKey}}&token={{trelloToken}}&name=TODO&idBoard={{boardId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "TODO"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create done list",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200',() => {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test('DONE list is created', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.be.an('object');",
							"    pm.expect(response).to.haveOwnProperty('id');",
							"    pm.expect(response.name).to.eql('DONE');",
							"    pm.expect(response.closed).to.be.false;",
							"    pm.expect(response.idBoard).to.eq(pm.collectionVariables.get('boardId'));",
							"    pm.collectionVariables.set('doneListId', response.id)",
							"})"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"DONE\",\n    \"id\": \"64b9ea0f429d021a2ed19311\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/lists?key={{trelloKey}}&token={{trelloToken}}&name=DONE&idBoard={{boardId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"lists"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "DONE"
						},
						{
							"key": "idBoard",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Create a card",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200',() => {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test('Card is created', () => {",
							"    const response = pm.response.json();",
							"    pm.expect(response).to.be.an('object');",
							"    pm.expect(response).to.haveOwnProperty('id');",
							"    pm.expect(response.id).to.be.a('string');",
							"    pm.expect(response.name).to.eql('TODO');",
							"    pm.expect(response.idList).to.eql(pm.collectionVariables.get('todoListId'));",
							"    pm.expect(response.idBoard).to.eql(pm.collectionVariables.get('boardId'));",
							"    pm.expect(response.badges.attachmentsByType.trello.card).to.eq(0);",
							"    pm.collectionVariables.set('cardId', response.id)",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"TODO\",\n    \"id\": \"64b9ea0f429d021a2ed19311\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/cards?key={{trelloKey}}&token={{trelloToken}}&name=Sign-up for Trello&idList={{todoListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"",
						"1",
						"cards"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "name",
							"value": "Sign-up for Trello"
						},
						{
							"key": "idList",
							"value": "{{todoListId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Move card to Done List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200',() => {",
							"    pm.response.to.have.status(200)",
							"});",
							"",
							"pm.test('Card is moved',() => {",
							"    const response = pm.response.json();",
							"    pm.expect(response.name).to.eql('TODO')",
							"    pm.expect(response.idList).is.eql(pm.collectionVariables.get('doneListId'))",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"TODO\",\n    \"id\": \"64b9ea0f429d021a2ed19311\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/1/cards/:id?key={{trelloKey}}&token={{trelloToken}}&idList={{doneListId}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"cards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						},
						{
							"key": "idList",
							"value": "{{doneListId}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{cardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status Code is 200',() => {",
							"    pm.response.to.have.status(200)",
							"});"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"const existingBoardIds = pm.variables.get('existingBoardIds');",
							"console.log(existingBoardIds);",
							"const boardId = existingBoardIds.pop();",
							"pm.collectionVariables.set('boardId', boardId);",
							"pm.collectionVariables.set('existingBoardIds', existingBoardIds);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Get deleted board",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Status code is 404', ()=> {",
							"    pm.response.to.have.status(404)",
							"",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/1/boards/:id?key={{trelloKey}}&token={{trelloToken}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"1",
						"boards",
						":id"
					],
					"query": [
						{
							"key": "key",
							"value": "{{trelloKey}}"
						},
						{
							"key": "token",
							"value": "{{trelloToken}}"
						}
					],
					"variable": [
						{
							"key": "id",
							"value": "{{boardId}}"
						}
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://api.trello.com"
		},
		{
			"key": "trelloKey",
			"value": "63b1d261982c40118000e25d361cfec9"
		},
		{
			"key": "trelloToken",
			"value": "ATTA2ef563f37ce4597d836b376424b2b8b7bc865e557142f03b34569282cc18f3075E8EDFE9"
		},
		{
			"key": "boardId",
			"value": "64c044e448ee7ffe84323a3f"
		},
		{
			"key": "todoListId",
			"value": "64c044ebba73774516e52e1d"
		},
		{
			"key": "doneListId",
			"value": "64c044eec568758f5f136d6b"
		},
		{
			"key": "cardId",
			"value": "64c044f21e6b35262e06b6e1"
		},
		{
			"key": "boardNumber",
			"value": 5
		},
		{
			"key": "existingBoardIds",
			"value": ""
		}
	]
}